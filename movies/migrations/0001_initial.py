# Generated by Django 3.2.7 on 2023-09-25 01:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(max_length=500)),
                ('link', models.CharField(max_length=500)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('order', models.IntegerField()),
                ('type', models.CharField(max_length=45)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'banners',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('handle', models.CharField(max_length=100, null=True)),
                ('channel_id', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(default='등록된 소개글이 없습니다.')),
                ('published_at', models.DateTimeField(null=True)),
                ('thumbnail', models.URLField(max_length=500)),
                ('subscriber_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('view_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('video_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(default='등록된 소개글이 없습니다.')),
                ('release_date', models.DateField()),
                ('link', models.CharField(max_length=500)),
                ('viewCount', models.BigIntegerField(blank=True, default=0, null=True)),
                ('likeCount', models.BigIntegerField(blank=True, default=0, null=True)),
                ('commentCount', models.BigIntegerField(blank=True, default=0, null=True)),
                ('duration', models.CharField(blank=True, max_length=500, null=True)),
                ('highlights', models.JSONField(blank=True, null=True)),
                ('topComments', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'episodes',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'grades',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(default='등록된 소개글이 없습니다.')),
                ('running_time', models.IntegerField(blank=True, default=0, null=True)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=2, null=True)),
                ('total_views', models.BigIntegerField(default=0, null=True)),
                ('total_likes', models.BigIntegerField(default=0, null=True)),
                ('total_comments', models.BigIntegerField(default=0, null=True)),
                ('poster_image', models.URLField(blank=True, max_length=500, null=True)),
                ('trailer', models.CharField(max_length=500, null=True)),
                ('playlist', models.CharField(blank=True, max_length=500, null=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.channel')),
            ],
            options={
                'db_table': 'movies',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image_url', models.URLField(max_length=500)),
            ],
            options={
                'db_table': 'participants',
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'db_table': 'wish_lists',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=1, max_digits=2)),
                ('comment', models.CharField(max_length=1000)),
                ('spoiler', models.BooleanField(default=False)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.user')),
            ],
            options={
                'db_table': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('type_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('start_at', models.DateTimeField(null=True)),
                ('end_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'db_table': 'points',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MovieParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=10)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.participant')),
            ],
            options={
                'db_table': 'movie_participants',
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'movie_genres',
            },
        ),
        migrations.CreateModel(
            name='MovieEpisode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.episode')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'movie_episodes',
            },
        ),
        migrations.CreateModel(
            name='MovieCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.country')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'movie_countries',
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='country',
            field=models.ManyToManyField(through='movies.MovieCountry', to='movies.Country'),
        ),
        migrations.AddField(
            model_name='movie',
            name='episode',
            field=models.ManyToManyField(through='movies.MovieEpisode', to='movies.Episode'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genre',
            field=models.ManyToManyField(through='movies.MovieGenre', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.grade'),
        ),
        migrations.AddField(
            model_name='movie',
            name='participant',
            field=models.ManyToManyField(through='movies.MovieParticipant', to='movies.Participant'),
        ),
        migrations.AddField(
            model_name='movie',
            name='user_rating',
            field=models.ManyToManyField(related_name='rater', through='movies.Rating', to='users.User'),
        ),
        migrations.AddField(
            model_name='movie',
            name='user_wish',
            field=models.ManyToManyField(related_name='wisher', through='movies.WishList', to='users.User'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=500)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'images',
            },
        ),
    ]
